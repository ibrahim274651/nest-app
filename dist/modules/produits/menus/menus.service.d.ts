import { CreateMenuDto } from './dto/create-menu.dto';
import { UpdateMenuDto } from './dto/update-menu.dto';
import { Menu } from './entities/menu.entity';
import { Model } from 'mongoose';
import { PageOptionsDto } from 'src/helpers/page-options-dto/page-options-dto';
import { CatalogueService } from '../catalogue/catalogue.service';
import { CategoriesService } from '../categories/categories.service';
import { ResponseI18nService } from 'src/helpers/translate/server-response/response-i18n.service';
import { TarrificationService } from 'src/settings/bases/tarrification/tarrification.service';
import { FilterFundDto } from 'src/common/filter/filter.dto';
import { AppHelperService } from 'src/helpers/app.helper.service';
export declare class MenusService {
    private readonly menuModel;
    private readonly categoriesService;
    private readonly catalogueService;
    private readonly appHelperService;
    private readonly responseI18nService;
    private readonly tarificationService;
    private readonly logger;
    constructor(menuModel: Model<Menu>, categoriesService: CategoriesService, catalogueService: CatalogueService, appHelperService: AppHelperService, responseI18nService: ResponseI18nService, tarificationService: TarrificationService);
    private beforeCreateOrUpdate;
    create(dataDto: CreateMenuDto): Promise<any>;
    findAll(filterFundDto: FilterFundDto, pageOptionsDto: PageOptionsDto): Promise<any>;
    findOne(id: string): Promise<any>;
    update(id: string, updateMenuDto: UpdateMenuDto): Promise<any>;
    remove(id: string): Promise<any>;
    private buildQuery;
    private constructFilter;
    private filterResults;
}
